# Copyright 2022 Lingfei Kong <colin404@foxmail.com>. All rights reserved.
# Use of this source code is governed by a MIT style
# license that can be found in the LICENSE file. The original repo for
# this file is https://github.com/superproj/onex.
#

kind: Cluster
apiVersion: kind.x-k8s.io/v1alpha4
name: onex
networking:
  # 绑定到宿主机上的地址，如果需要外部访问请设置为宿主机 IP
  apiServerAddress: 10.37.83.200
  # 绑定到宿主机上的端口，如果建多个集群或者宿主机已经占用需要修改为不同的端口
  apiServerPort: 16443
  # 设置 Pod 子网
  podSubnet: "10.244.0.0/16"
  # 设置 Kubernetes Service 子网
  serviceSubnet: "10.96.0.0/12"
  # 设置集群网络模式为双栈
  ipFamily: dual
  # 是否使用默认的 cni 插件 kindnet
  disableDefaultCNI: false
  # kube-proxy 使用的网络模式，none 表示不需要 kube-proxy 组件
  kubeProxyMode: "ipvs"
# patch the generated kubeadm config with some extra settings
kubeadmConfigPatches:
- |
  kind: ClusterConfiguration
  networking:
    dnsDomain: "onex.io"
- |
  apiVersion: kubelet.config.k8s.io/v1beta1
  kind: KubeletConfiguration
  # 开启 imageGC，防止磁盘空间被 image 占满
  # imageGCHighThresholdPercent: 80 # NOTICE: 该选项慎开启，可能导致创建多 worker 节点的集群失败
  #evictionHard: # 不要打开，否则 nodes 可能 NotReady
  #nodefs.available: "0%"
  #nodefs.inodesFree: "0%"
  #imagefs.available: "90%"
nodes:
  # master节点，写一项表示加一个节点
- role: control-plane
  # 自定义节点使用的镜像及版本
  image: kindest/node:v1.28.0@sha256:dad5a6238c5e41d7cac405fae3b5eda2ad1de6f1190fa8bfc64ff5bb86173213
  kubeadmConfigPatches:
  - |
    kind: ClusterConfiguration
    apiServer:
        extraArgs:
          # 自动创建命名空间
          enable-admission-plugins: NamespaceAutoProvision,NamespaceExists,NamespaceLifecycle
  # 宿主机和节点文件共享挂载
  extraMounts:
    # 宿主机目录
  - hostPath: /kind/onex
    # 节点目录
    containerPath: /data
    readOnly: false
    selinuxRelabel: false
    propagation: HostToContainer
    # 节点端口到宿主机端口映射
  extraPortMappings:
    # 节点端口 nodeport
  - containerPort: 32080 # 对应到 traefik web.nodePort
    # 宿主机端口
    hostPort: 18080
    # 宿主机端口监听地址，需要外部访问设置为"0.0.0.0"
    listenAddress: "0.0.0.0"
    protocol: TCP
  - containerPort: 32443 # 对应到 traefik websecure.nodePort
    hostPort: 18443
    listenAddress: "0.0.0.0"
    protocol: TCP
  - containerPort: 31090 # 对应到 traefik usercenter.nodePort
    hostPort: 11090
    listenAddress: "0.0.0.0"
    protocol: TCP
  - containerPort: 30001 # Redis 6379
    hostPort: 30001
    listenAddress: "0.0.0.0"
    protocol: TCP
  - containerPort: 30002 # Etcd 2379
    hostPort: 30002 
    listenAddress: "0.0.0.0"
    protocol: TCP
  - containerPort: 30003 # Etcd 2380
    hostPort: 30003
    listenAddress: "0.0.0.0"
    protocol: TCP
  - containerPort: 30004 # MongoDB 27017
    hostPort: 30004
    listenAddress: "0.0.0.0"
    protocol: TCP
  - containerPort: 30005 # Jaeger 4317
    hostPort: 30005
    listenAddress: "0.0.0.0"
    protocol: TCP
  - containerPort: 30006 # Kafka Port
    hostPort: 30006
    listenAddress: "0.0.0.0"
    protocol: TCP
 # worker 节点，配置同 master 节点
- role: worker
  image: kindest/node:v1.28.0@sha256:dad5a6238c5e41d7cac405fae3b5eda2ad1de6f1190fa8bfc64ff5bb86173213
- role: worker
  image: kindest/node:v1.28.0@sha256:dad5a6238c5e41d7cac405fae3b5eda2ad1de6f1190fa8bfc64ff5bb86173213
- role: worker
  image: kindest/node:v1.28.0@sha256:dad5a6238c5e41d7cac405fae3b5eda2ad1de6f1190fa8bfc64ff5bb86173213
